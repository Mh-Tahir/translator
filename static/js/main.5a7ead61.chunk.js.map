{"version":3,"sources":["components/field.js","components/languages.js","components/translate.js","App.js","index.js"],"names":["field","_ref","label","value","onChange","react_default","a","createElement","className","e","target","LANGUAGES","Languages","language","onLanguageChange","undefined","languageConfig","find","l","Error","concat","_useState","useState","_useState2","Object","slicedToArray","open","setOpen","onClick","map","_ref2","href","key","Math","random","uuidv4","require","v4","doTranslation","asyncToGenerator","regenerator_default","mark","_callee","input","languageCode","_yield$axios","data","wrap","_context","prev","next","axios","baseURL","url","method","headers","Ocp-Apim-Subscription-Key","Ocp-Apim-Subscription-Region","Content-type","X-ClientTraceId","toString","params","api-version","from","to","text","responseType","sent","abrupt","translations","stop","_x","_x2","apply","this","arguments","translate","translated","setTranslated","useEffect","then","Fragment","App","setLanguage","_useState3","_useState4","setText","languages","render","document","querySelector"],"mappings":"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","file":"static/js/main.5a7ead61.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default ({ label, value, onChange }) => {\n  return (\n    <div>\n      <label>{label}</label>\n      <input\n        className=\"input\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\n\nconst LANGUAGES = [\n  { label: \"Afrikaans\", value: \"af\" },\n  { label: \"Arabic\", value: \"ar\" },\n  { label: \"French\", value: \"fr\" },\n  { label: \"Hindi\", value: \"hi\" },\n  { label: \"Japanese\", value: \"ja\" },\n  { label: \"English\", value: \"en\" },\n  { label: \"Spanish\", value: \"es\" },\n  { label: \"Italian\", value: \"it\" },\n];\n\nconst Languages = ({ language, onLanguageChange }) => {\n  if (language === undefined) {\n    language = \"en\";\n  }\n  const languageConfig = LANGUAGES.find((l) => l.value === language);\n  if (!languageConfig) {\n    throw new Error(`Unknown language code '${language}'`);\n  }\n\n  const [open, setOpen] = useState(false);\n\n  const onSelect = (language) => {\n    setOpen(false);\n    onLanguageChange(language);\n  };\n\n  return (\n    <div>\n      <label className=\"label\">Введите язык</label>\n      <div className={`dropdown ${open && \"is-active\"}`}>\n        <div className=\"dropdown-trigger\">\n          <button className=\"button\" onClick={() => setOpen(!open)}>\n            <span>{languageConfig.label}</span>\n            <span className=\"icon is-small\">\n              <i className=\"fas fa-angle-down\" />\n            </span>\n          </button>\n        </div>\n        <div className=\"dropdown-menu\">\n          <div className=\"dropdown-content\">\n            {LANGUAGES.map(({ label, value }) => {\n              return (\n                <a href=\"#\" key={Math.random()} onClick={() => onSelect(value)} className=\"dropdown-item\">\n                  {label}\n                </a>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Languages;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst { v4: uuidv4 } = require(\"uuid\");\n\n// const doTranslation = async (input, languageCode, cancelToken) => {\n//   try {\n//     const { data } = await axios.post(\n//       \"https://translation.googleapis.com/language/translate/v2?key=AIzaSyCf0Xy0OnhxlduyEt3K8zP-sOuu-l_u6uA\",\n//       {\n//         q: input,\n//         target: languageCode\n//       },\n//       { cancelToken: cancelToken.token }\n//     );\n\n//     return data.data.translations[0].translatedText;\n//   } catch (err) {\n//     return \"\";\n//   }\n// };\n\nconst subscriptionKey = \"489b497342f54930858f28f54fa34188\";\nconst endpoint = \"https://api.cognitive.microsofttranslator.com\";\n\n// Add your location, also known as region. The default is global.\n// This is required if using a Cognitive Services resource.\nconst location = \"westeurope\";\n\nconst doTranslation = async (input, languageCode) => {\n  const { data } = await axios({\n    baseURL: endpoint,\n    url: \"/translate\",\n    method: \"post\",\n    headers: {\n      \"Ocp-Apim-Subscription-Key\": subscriptionKey,\n      \"Ocp-Apim-Subscription-Region\": location,\n      \"Content-type\": \"application/json\",\n      \"X-ClientTraceId\": uuidv4().toString(),\n    },\n    params: {\n      \"api-version\": \"3.0\",\n      from: \"ru\",\n      to: [languageCode],\n    },\n    data: [\n      {\n        text: input,\n      },\n    ],\n    responseType: \"json\",\n  });\n  return data[0].translations[0].text;\n};\n\nexport default ({ language, text }) => {\n  const [translated, setTranslated] = useState(\"\");\n\n  useEffect(() => {\n    if (!text) {\n      return;\n    }\n\n    doTranslation(text, language).then(setTranslated);\n    // let result = doTranslation(text, language);\n    // setTranslated(result);\n  }, [text, language]);\n\n  // useEffect(() => {\n  //   if (!text) {\n  //     return;\n  //   }\n\n  //   const cancelToken = axios.CancelToken.source();\n\n  //   doTranslation(text, language, cancelToken).then(setTranslated);\n\n  //   return () => {\n  //     try {\n  //       cancelToken.cancel();\n  //     } catch (err) {}\n  //   };\n  // }, [text, language]);\n\n  return (\n    <>\n      <label className=\"label\">Перевод</label>\n      <h1 className=\"title\">{translated}</h1>\n    </>\n  );\n};\n","import \"./styles.css\";\nimport React, { useState } from \"react\";\nimport Field from \"./components/field\";\nimport Languages from \"./components/languages\";\nimport Translate from \"./components/translate\";\n\nexport default function App() {\n  const [language, setLanguage] = useState(\"en\");\n  const [text, setText] = useState(\"Реакция\");\n\n  return (\n    <div>\n      <Field label=\"Введите русские слова\" onChange={setText} value={text} />\n      <Languages language={language} onLanguageChange={setLanguage} />\n      <hr />\n      <Translate text={text} language={language} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}